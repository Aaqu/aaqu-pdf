name: Publish NPM package

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Check the version
        id: check
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          echo "Current version: $CURRENT_VERSION"
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          
          LATEST_VERSION=${LATEST_TAG#v}
          
          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; 
          then
            echo "Version changed"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version not changed"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish
        if: steps.check.outputs.version_changed == 'true'
        run: npm publish --access public --no-git-checks

#      - name: Create GitHub Tag Release
#        if: steps.check.outputs.version_changed == 'true'
#        run: |
#          git config --local user.email "github-actions[bot]@users.noreply.github.com"
#          git config --local user.name "github-actions[bot]"
#          git tag -a "v${{ steps.check.outputs.new_version }}" -m "v${{ steps.check.outputs.new_version }}"
#          git push origin "v${{ steps.check.outputs.new_version }}"

      - name: Create GitHub Release
        if: steps.check.outputs.version_changed == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const version = "${{ steps.check.outputs.new_version }}";
              await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: `node-red-aaqu-pdf@${version}`,
                name: `node-red-aaqu-pdf@${version}`,
                body: `Package v${version}`,
              });
            } catch (e) {
              core.setFailed(e.message);
            }
